#!/bin/bash
#
# @author   Hermann Mayer <hermann.mayer92@gmail.com>
# @name     maintenance

# Get the full path of the current file, no matter where it being called from
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Go in this path and change to the app directory
cd "${DIR}" && cd ../ && echo "Current working dir: `pwd`"

# Set the Commandline Args
TEMP=`getopt -o h --long generate-docs,cleanup-docs -- "$@"`

function print_todo()
{
    echo -e "\n  \E[0;33m${1} \E[0m.."
}

function prepare-docs-chaper()
{
    print_todo "Prepare \"${1}\" chapter"
    cd "docs/${1}"
    for file in $(find *.md 2>/dev/null); do
        cat "${file}" >> "../chaper_${1}.md"
    done
    marked --gfm --tables --lang-prefix "" "../chaper_${1}.md" >> "../chaper_${1}.html";
    cd ../..
}

function cleanup-docs()
{
    print_todo "Cleanup documentation files"
    rm -f ./docs/*.html
    rm -f ./docs/chaper_*.md
}

function generate-docs()
{
    cleanup-docs

    prepare-docs-chaper "guide"
    # prepare-docs-chaper "concepts"
    # prepare-docs-chaper "examples"

    print_todo "Generate documentation"
    # jsdoc -c ./docs/jsdoc.conf.json -u ./docs/examples ./lib ./README.md
    jsdoc -c ./docs/jsdoc.conf.json ./lib ./README.md
}

function usage()
{
    echo "Usage: $0 [OPTION]";
    echo
    echo " -h, --help                     Print this Help";
    echo
    echo " --generate-docs                Generate documentation";
    echo " --cleanup-docs                 Cleanup documentation";
    exit 1;
}

if [ $? != 0 ] ; then
    usage
fi

eval set -- "$TEMP"

while true ; do
    case "$1" in
        --help|-h|--)
            shift
            usage
            break;;
        --generate-docs)
            shift
            generate-docs
            break;;
        --cleanup-docs)
            shift
            cleanup-docs
            break;;
        *)
            echo "Internal error!"
            exit 1;;
    esac
done

