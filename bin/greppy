#!/usr/bin/env node

/**
 * Greppy CLI
 *
 * @module greppy/cli
 * @author Hermann Mayer <hermann.mayer92@gmail.com>
 */

var fs           = require('fs');
var path         = require('path');
var colors       = require('colors')
var childProcess = require('child_process');
var Table        = require('tab');

var getopt = require('node-getopt').create([
    ['', 'new=APP_PATH', 'Create the application directory structure'],
    ['', 'start=ARG', 'Start the configured application ((non-)clustered)'],
    ['', 'stop=ARG', 'Stop the whole application or explicit modules'],
    ['', 'restart=ARG', 'Restart the whole application or explicit modules'],
    ['', 'status', 'Check the status of the whole application'],

    ['h', 'help', 'Display this help'],
    ['v', 'version', 'Show version']
]);

getopt.setHelp(
  "Usage: greppy [OPTION]\n" +
  "\n" +
  "[[OPTIONS]]\n" +
  "\n" +
  "Installation: npm install -g greppy\n" +
  "Respository:  https://github.com/Jack12816/greppy"
);

// Parse the given process args
var opts = getopt.parseSystem();

// Without args print the help
if (0 == Object.keys(opts.options).length) {
    getopt.showHelp();
    return;
}

/**
 * New command
 */
if (opts.options.hasOwnProperty('new')) {
    require('./commands/new').run(opts);
}

/**
 * start command
 */
if (opts.options.hasOwnProperty('start')) {
    require('./commands/start').run(opts.options.start);
}

/**
 * stop command
 */
if (opts.options.hasOwnProperty('stop')) {
    require('./commands/stop').run(opts.options.stop);
}

/**
 * restart command
 */
if (opts.options.hasOwnProperty('restart')) {
    require('./commands/stop').run(opts.options.restart, function() {
        require('./commands/start').run(opts.options.restart);
    });
}

/**
 * status command
 */
if (opts.options.hasOwnProperty('status')) {
    require('./commands/status').run();
}

